TODO
====

_(ordered by priority, roughly)_

Compatibility with newer systemd target names::
  * local-fs.target is now root-fs.target and initrd-fs.target
  ** see http://cgit.freedesktop.org/systemd/systemd/commit/?id=700e07f

Upgrade lock::
  * If /etc/yum/vars/releasever exists, complain to user (#908017)

Safety checks::
  * Count/report packages without updates/obsoletes
  * Report packages with missing deps

Disk space handling::
  * Pad RPM diskspace check to require more disk
  * Add `--packagedir` and `--cachedir` flags

ISO/Device/"Offline" upgrades::
  * Handle ISO-on-USB-stick case
  * Handle mount chains deeper than ISO-on-USB

GUI::
  * Move commandline parsing to fedup library, use it
  * Wire up the UI bits
  * Wire up progress callbacks
  ** yum in a subprocess
  *** use `multiprocessing.Queue` to send back progress data?

Migration::
  * Add a _fedup-before-upgrade_ scriptlet hook
  ** Not technically a dracut hook, since it'll be run by fedup
  ** Example uses:
  *** https://bugzilla.redhat.com/show_bug.cgi?id=881624[Bug #881624]:
      Migrate `KEYTABLE=...` to `KEYMAP=...`
  *** https://bugzilla.redhat.com/show_bug.cgi?id=881670[Bug #881670]:
      Add x-systemd.device-timeout=0 for mounts that need it

Docs::
  * man pages for services
  * man pages for targets
  * document boot args

Upstreaming::
  * Get system-upgrade.target upstream
  ** Pass `switch-root` flags to new `systemd`
  ** Generator to switch to system-upgrade.target
  *** read `/run/initramfs/upgrade.conf`
  *** check UPGRADEROOT and UPGRADELINK
  *** switch target for this boot

SELinux::
  * Find a way to run upgrade with SELinux enforcing
  . Start with new policy while in initramfs
  . Enforce the old policy after switching to old system
  . Use the new policy for writing files during upgrade
